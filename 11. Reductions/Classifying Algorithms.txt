Classifying Algorithms Summary

		Desiderata. Problem with algorithm that matches lower bound.
		Ex. Sorting and convex hull have complexity N log N.
		
		Desiderata'. Prove that two problems X and Y have the same complexity.
			・First, show that problem X linear-time reduces to Y.
			・Second, show that Y linear-time reduces to X.
			・Conclude that X and Y have the same complexity.
			
Caveat

		SORT. Given N distinct integers, rearrange them in ascending order.
		CONVEX HULL. Given N points in the plane, identify the extreme points of the convex hull (in counterclockwise order).
		
		Proposition. SORT linear-time reduces to CONVEX HULL.
		Proposition. CONVEX HULL linear-time reduces to SORT.
		Conclusion. SORT and CONVEX HULL have the same complexity.
		
		A possible real-world scenario.
			・System designer specs the APIs for project.
			・Alice implements sort() using convexHull().
			・Bob implements convexHull() using sort().
			・Infinite reduction loop!
			・Who's fault?
			
Integer arithmetic reductions

		Integer multiplication. Given two N-bit integers, compute their product.
		Brute force. N^2 bit operations.
		
							1 1 0 1 0 1 0 1
					    ×   0 1 1 1 1 1 0 1
					    _____________________
							1 1 0 1 0 1 0 1
						  0 0 0 0 0 0 0 0
					    1 1 0 1 0 1 0 1
					  1 1 0 1 0 1 0 1
				    1 1 0 1 0 1 0 1
				  1 1 0 1 0 1 0 1
				1 1 0 1 0 1 0 1
			  0 0 0 0 0 0 0 0
			  ______________________________
			0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 1
			
			
			problem 						arithmetic 				order of growth
			integer multiplication 				a × b 					M(N)
			integer division 					a / b, a mod b 			M(N)
			integer square 						a^2 					M(N)
			integer square root 				⎣√a ⎦ 					M(N)
			
		integer arithmetic problems with the same complexity as integer multiplication
		
		
		1. History of complexity of integer multiplication

			year 			algorithm 							order of growth
			? 				brute force 							N^2
			1962 			Karatsuba-Ofman (Divide and conquer)	N^1.585
			1963 			Toom-3, Toom-4							N^1.465 , N^1.404
			1966 			Toom-Cook 								N^1 + ε
			1971 			Schönhage–Strassen 						NlogNloglogN
			2007 			Fürer						    		NlogN 2^log*N
			? 				? 										N
			
			number of bit operations to multiply two N-bit integers
			
			Remark. GNU Multiple Precision Library uses one of five different algorithm depending on size of operands.
			        (used in Maple, Mathematica, gcc, cryptography, ...)
			        
Linear algebra reductions

		Matrix multiplication. Given two N-by-N matrices, compute their product.
		Brute force. N^3 flops.
		
		0.1 0.2 0.8 0.1				0.4 0.3 0.1 0.1   	 0.16 0.11 0.34 0.62
		0.5 0.3 0.9 0.6				0.2 0.2 0.0 0.6	 =	 0.74 0.45 0.47 1.22
		0.1 0.0 0.7 0.4		* 		0.0 0.0 0.4 0.5	   	 0.36 0.19 0.33 0.72
		0.0 0.3 0.3 0.1				0.8 0.4 0.1 0.9	   	 0.14 0.10 0.13 0.42
		
		
		problem 						linear algebra 					order of growth
		matrix multiplication 			A × B 							MM(N)
		matrix inversion 				A–1 							MM(N)
		determinant 					| A | 							MM(N)
		system of linear equations 		Ax = b 							MM(N)
		LU decomposition 				A = L U 						MM(N)
		least squares 					min ||Ax – b||2 				MM(N)
		
		numerical linear algebra problems with the same complexity as matrix multiplication
		
		1. Complexity of matrix multiplication history
		
		year 				algorithm 						order of growth
		? 					brute force 					N^3
		1969 				Strassen (Divide and conquer)	N^2.808
		1978 				Pan 							N^2.796
		1979 				Bini 							N^2.780
		1981 				Schönhage						N^2.522
		1982 				Romani 							N^2.517
		1982 				Coppersmith-Winograd 			N^2.496
		1986 				Strassen 						N^2.479
		1989 				Coppersmith-Winograd 			N^2.376
		2010 				Strother 						N^2.3737
		2011			    Williams 						N^2.3727
		? 						? 							N^2 + ε
		
		number of floating-point operations to multiply two N-by-N matrices