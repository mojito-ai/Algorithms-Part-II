Introduction to MaxFlow & MinCut:

MinCut Problem:
	
	Input: An edge weighted digraph, source vertex s, and target vertex t. (each edge has a positive capacity)
	
	Def: A st-cut(cut) is a partition of the vertices into two disjoint sets, with s in one Set A and t in the other set B.
	Def: Its capacity is defined as the sum of the capacities of edges going from set A to B.
	
	Minimum st-cut (min-cut) problem : Find a cut of minimum capacity
	
	Applications: 
		 
		-1950s: Cut supplies (if Cold War turns into real war)
		Rail network connecting Soviet Union with Eastern European countries (map declassified by Pentagon in 1999)
		
		-2010: Government-in-power's goal. Cut off communication to a set of people.
		
MaxFlow Problem:

	Input: An edge weighted digraph, source vertex x, and target vertex t. (each edge has a positive capacity)
	
	Def: An st-flow (flow) is an assignment of values to the edges such that
		
		1. Capacity Constraint: 0 <= edge's flow <= edge's capacity 
		2. Local Equilibrium: Inflow=Outflow at every vertex (except for s & t)
		
	Def: The value of a flow is the Inflow at t. (we assume no edge points from t or to s)
	
	Maximum st-flow (max-flow) problem : Find a flow of maximum value.
	
	Applications: 
	
		-Soviet Union Goal: Maximize flow of supplies to Eastern Europe
		-"Free World" goal: Maximize flow of information to specified set of people.
		
Summary: MaxFlow and MinCut are Primal & Dual relationship

Applications:

	Maxflow/Mincut is a widely applicable problem solving model
	
	1. Datamining
	2. Openpit mining
	3. Bipartite matching
	4. Network reliability
	5. Baseball elimination
	6. Image segmentation (Liver and hepatic vascularization segmentation)
	7. Network connectivity
	8. Distributed computing
	9. Egalitarian stable matching
	10. Security of statistical data
	11. Multi camera scene restoration
	12. Sensor placement for homeland security
	13. Many, many more
	
Bipartite Matching:
	- N students apply for N jobs
	- Each gets several offers
	- Is there a way to match all the students to jobs?
	
	Given a bipartite graph, find a perfect matching
