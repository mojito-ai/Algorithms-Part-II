1. Does a linear time algorithm exist? 

	Year			worst-case				discovered by
	1975			EloglogV					Yao
	1976			EloglogV				Cheritan-Tarjan
	1984			Elog*V, E+VlogV			Fredman-Tarjan
	1986			Elog(log*V)				Gabow-Galil-Spencer-Tarjan
	1997			Eα(V) logα(V)			  Chazelle
	2000			Eα(V)					  Chazelle
	2002			optimal					Pettie-Ramachandran
	
	Linear time randomized MST algorithm (Karger-Klein-Tarjan 1995)

2. Euclidean MST: Given N points in a plane, find MST connecting them, where the distances between point pairs are their 
				  Euclidean distances.
				 
	- Brute Force: Calculate ~N^2/2 distances and run Prim's algorithm
	- Ingenuity: Exploit geometry (Voronoi diagram, or the Delaunay triangulation) and do it in ~cNlogN
				 Idea: Build a subgraph where each point is connected to certain number of points that are close to it.
				 	   MST is a subgraph of Delaunay triangulation.
				 	   
3. Clustering: 
				-K clustering: Divide a set of objects and classify into k coherent groups.
				-Distance function: Numeric value specifying "closeness" of two objects.
				-Goal: Divide into clusters so that objects in different clusters are far apart.
				
				-Applications: Rounting in ad-hoc networks
							   Document categorization for web search
							   Similarity searching in medical image databases
							   Skycat: Cluster 10^9 sky objects into stars, quasars, galaxies.
							  
4. Single Link Clustering: 
							- Single Link: Distance between two clusters equal the distance between the two closest objects (one in each cluster)
							- Single Link clustering: Given an integer k, find a k-clustering that maximizes the distance between two closest clusters.
							
5. Algorithm:
				- Form V clusters of one object each.
				- Find the closest pair of objects such that each object is in different cluster, and merge the two clusters.
				- Repeat until there are exactly k clusters.
				
				Observation: This is Kruskal's Algorithm (stop when k connected components)
				Alternative: Run Prim's algorithm & delete K-1 max weight edges.